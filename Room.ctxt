#BlueJ class context
comment0.target=Room
comment0.text=\n\ Abstract\ class\ Room\ provides\ the\ required\ fields\ and\ methods\ for\ \n\ a\ type\ of\ Hotel\ Room.\ Rooms\ on\ higher\ floors\ have\ a\ higher\ cost\ per\ night.\n\n\ @author\ Dale\ Berg,\ Nick\ Coyle,\ Megan\ Laine,\ Steven\ Liu\n\ @version\ 01/19/2019\n
comment1.params=roomNum\ floor\ capacity\ bedType
comment1.target=Room(java.lang.String,\ int,\ int,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ Room\ object\n\ \n\ @param\ roomNum\ (String)\ the\ room\ number\ of\ the\ room\n\ @param\ floor\ (int)\ the\ floor\ where\ room\ located\n\ @param\ capacity\ (int)\ the\ human\ capacity\ of\ the\ room\n\ @param\ bedType\ (String)\ the\ bedtype\ of\ the\ room\n
comment10.params=other
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ Method\ equals\ overrides\ the\ Object\ class's\ equals\ method;\ matches\ by\ room\ number.\n\ It\ returns\ true\ if\ the\ other\ Room\ object\ has\ the\ same\ room\ number\ as\ this\ room.\n\ It\ returns\ false\ if\ the\ other\ Object\ is\ not\ the\ same\ room,\ or\ is\ not\ a\ room-object.\n\n\ @param\ other\ (Object)\ to\ be\ compared\n\ @return\ true\ if\ other\ Room\ has\ the\ same\ room\ number\ as\ this\ room.\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\n\ Overrides\ the\ Object\ Class's\ toString()\ method.\ \n\ For\ example\:\ 'Room\:\ 405,\ Floor\:\ 4,\ BedType\:\ DOUBLE,\ Capacity\:\ 4,\n\ Available?\:\ true'\n\ \n\ @return\ (String)\ representing\ information\ about\ this\ Room\n
comment2.params=
comment2.target=double\ getRate()
comment2.text=\n\ This\ abstract\ method\ must\ be\ present\ in\ all\ child\ classes.\n\ It\ should\ return\ the\ price\ of\ the\ room\ per\ night,\ accounting\ for\ \n\ which\ floor\ the\ room\ is\ on\ and\ any\ special\ charges\ based\ on\n\ Room\ -\ Regular,\ Large,\ or\ Suite.\n\ Note\ that\ in\ the\ child\ classes,\ getRate()\ will\ need\ to\ call\ \n\ super.getBaseRate()\!\n\ \n\ @return\ (double)\ representing\ nightly\ price\ of\ Room\n
comment3.params=
comment3.target=java.lang.String\ getRoomNumber()
comment3.text=\n\ Returns\ the\ Room\ number\ as\ a\ String.\n\ \n\ @return\ (String)\ the\ room\ number\n
comment4.params=
comment4.target=int\ getFloor()
comment4.text=\n\ Returns\ the\ Room's\ floor\ as\ an\ int.\n\ \n\ @return\ (int)\ the\ room's\ floor\ number\n
comment5.params=
comment5.target=int\ getCapacity()
comment5.text=\n\ Returns\ the\ Room's\ capacity\ as\ an\ int.\n\ \n\ @return\ (int)\ the\ room's\ human\ capacity\n
comment6.params=
comment6.target=java.lang.String\ getBedType()
comment6.text=\n\ Returns\ the\ Room's\ bedType\ as\ a\ String.\n\ \n\ @return\ (String)\ the\ room's\ bedType\n
comment7.params=
comment7.target=double\ getBaseRate()
comment7.text=\n\ Returns\ the\ base\ rate\ with\ NO\ changes\ based\ on\ floor\ (that\ is\ done\ in\ child\ classes).\n\ \n\ @return\ (double)\ the\ base\ price\ of\ the\ room\ per\ night\ in\ Hotel\ Burger\n
comment8.params=
comment8.target=boolean\ isAvailable()
comment8.text=\n\ Returns\ true\ if\ the\ Room\ passed\ as\ an\ argument\ is\ available.\n\ \n\ @param\ r\ (Room)\ to\ check\n\ @return\ true\ if\ the\ room\ is\ Available\ for\ guests.\n
comment9.params=b
comment9.target=void\ setAvailable(boolean)
comment9.text=\n\ Changes\ the\ status\ of\ this\ room.\n\ \n\ @param\ true\ if\ room\ will\ be\ available\n
numComments=12
