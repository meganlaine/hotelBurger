#BlueJ class context
comment0.target=Hotel
comment0.text=\n\ Class\ to\ represent\ a\ Hotel.\ Has\ storage\ containers\ for\ all\ the\ Rooms\ and\ all\ the\ Reservations.\n\ \n\ @field\ name\:String\ the\ name\ of\ the\ Hotel\n\ @field\ address\:String\ the\ address\ of\ the\ Hotel\n\ @field\ phoneNumber\:String\ the\ phonenumber\ you\ can\ use\ to\ call\ the\ Hotel\n\ @field\ rooms\:ArrayList<Room>\ the\ container\ for\ all\ Rooms\ in\ the\ Hotel\n\ @field\ reservations\:ArrayList<Reservation>\ the\ container\ for\ all\ the\ reservations\ in\ the\ Hotel\n\ \n\ @author\ Dale\ Berg,\ Nick\ Coyle,\ Megan\ Laine,\ Steven\ Liu\n\ @version\ 1/17/2019\n
comment1.params=name\ address\ phoneNumber
comment1.target=Hotel(java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\n\ This\ is\ the\ constructor\ that\ all\ other\ constructors\ will\ use.\n
comment10.params=
comment10.target=java.lang.String\ getPhoneNumber()
comment11.params=room
comment11.target=void\ addRoom(Room)
comment12.params=
comment12.target=java.util.ArrayList\ getEmptyRooms()
comment13.params=
comment13.target=java.util.ArrayList\ getOccupiedRoomsList()
comment14.params=
comment14.target=int\ getOccupiedRooms()
comment15.params=
comment15.target=java.util.ArrayList\ getAllRooms()
comment16.params=roomNumber
comment16.target=Room\ getRoom(java.lang.String)
comment16.text=\n\ This\ enables\ us\ to\ search\ through\ all\ rooms\ in\ the\ hotel\ and\ returns\ the\ room\ object\n\ which\ corresponds\ to\ the\ room\ number\ argument.\n
comment17.params=
comment17.target=int\ getNumReservations()
comment18.params=
comment18.target=java.lang.String\ toString()
comment2.params=
comment2.target=Hotel()
comment2.text=\n\ This\ is\ the\ default\ constructor\ if\ you\ pass\ no\ parameters,\ it\ just\ calls\ the\ other\ constructor\ will\ some\ default\ testing\ values.\n
comment3.params=fileName
comment3.target=Hotel(java.lang.String)
comment3.text=\n\ Constructor\ used\ from\ Main\ client\ code.\ do\ not\ delete.\n\ Reads\ data\ from\ the\ hotel\ text\ file,\ and\ populate\ the\ ArrayList<Room>\n
comment4.params=
comment4.target=void\ fillRoomArrayList()
comment4.text=\n\ Reads\ data\ from\ a\ .txt\ file\ and\ stores\ it\ in\ this\ Room-object\ ArrayList.\n\ Assumes\ that\ the\ text\ file\ is\ in\ a\ correct\ template.\ (Assume\ no\ mistakes\ in\ .txt\ file)\n\n\ @param\ fileName\ (String)\ representing\ a\ .txt\ file.\n\ @throws\ FileNotFoundException\ if\ the\ file\ doesn't\ exist\ or\ cannot\ be\ read.\n\ @throws\ IllegalArgumentException\ if\ the\ file\ doesn't\ match\ expected\ format.\n
comment5.params=name
comment5.target=void\ setName(java.lang.String)
comment6.params=address
comment6.target=void\ setAddress(java.lang.String)
comment7.params=phoneNumber
comment7.target=void\ setPhoneNumber(java.lang.String)
comment8.params=
comment8.target=java.lang.String\ getName()
comment9.params=
comment9.target=java.lang.String\ getAddress()
numComments=19
