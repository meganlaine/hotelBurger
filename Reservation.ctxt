#BlueJ class context
comment0.target=Reservation
comment0.text=\n\ Reservation\ class\ models\ a\ reservation\ in\ a\ hotel.\ A\ reservation\ is\ a\ guarantee\ to\ a\ \n\ guest\ that\ they\ will\ have\ a\ room\ set\ aside\ for\ them\ during\ a\ specified\ range\ of\ dates.\ \n\ When\ they\ come\ to\ the\ hotel,\ they\ can\ checkin\ using\ that\ reservation.\ Then,\ they\ get\ the\ \n\ room\ key\ and\ can\ stay\ in\ the\ hotel\ for\ as\ many\ nights\ as\ they\ agreed\ to\ in\ the\ reservation.\n\ Modifying\ a\ reservation\ means\ the\ guest\ can\ cancel\ the\ reservation,\ \n\ change\ any\ parameters\ about\ it,\ or\ checkout.\n\ \n\ Reservation\ object\ has\ a\ Status\:\ you\ can\ change\ WAITING,\ IN,\ OUT,\ or\ CANCELED.\n\ Waiting\ \=\ reservation\ has\ been\ made,\ but\ guest\ is\ not\ presently\ in\ the\ hotel.\n\ In\ \=\ reservation\ made,\ and\ guest\ is\ in\ the\ hotel.\n\ Out\ \=\ reservation\ completed,\ and\ guest\ is\ out\ of\ hotel.\n\ Canceled\ \=\ reservation\ canceled.\n\ \n\ The\ best\ way\ to\ access\ objects\ of\ Type\ Reservation\ is\ thru\ its\ unique\ ID.\n\ \n\ NOTE\:\ you\ can't\ change\ a\ Guest\ on\ the\ reservation\ at\ this\ moment.\n\ The\ logic\ behind\ that\ is\ you\ would\ cancel\ the\ reservation\ and\ \n\ create\ a\ new\ one\ for\ a\ new\ guest.\ (of\ course\ the\ goodness\ of\ this\ is\ debatable)\n\n\ @author\ Dale\ Berg,\ Nick\ Coyle,\ Megan\ Laine,\ Steven\ Liu\n\ @version\ 01/19/2019\n
comment1.params=r\ g\ status
comment1.target=Reservation(Room,\ Guest,\ Status)
comment1.text=\n\ Constructor\ 1/1\ for\ Reservation\ object\:\ it\ assigns\ a\ Room\ and\ a\ Guest\ object\n\ to\ the\ reservation.\ It\ also\ assigns\ an\ ID\ number\ to\ the\ Reservation\n\ \n\ @param\ r\ (Room)\ the\ Room\ listed\ on\ the\ reservation\n\ @param\ g\ (Guest)\ the\ Guest\ listed\ on\ the\ reservation\n\ @param\ status\ (Status)\ status\ of\ the\ reservation.\n
comment10.params=
comment10.target=Room\ getRoom()
comment10.text=\n\ This\ method\ returns\ the\ room\ object\ of\ this\ reservation.\n
comment11.params=
comment11.target=Guest\ getGuest()
comment11.text=\n\ This\ method\ returns\ the\ guest\ object\ of\ this\ reservation.\n
comment12.params=r
comment12.target=void\ setRoom(Room)
comment12.text=\n\ Sets\ the\ Reservation's\ room.\ Validates\ that\ the\ room\ in\ question\ is\ available.\ \n\ Sets\ the\ room\ availability\ to\ false.\n\ \n\ @param\ r\ (Room)\ the\ room\ to\ be\ placed\ on\ the\ Reservation.\n\ @throw\ IllegalArgumentException\ if\ the\ room\ is\ not\ available.\n
comment13.params=other
comment13.target=void\ changeRoom(Room)
comment13.text=\n\ Changes\ the\ Reservation's\ room\ from\ this\ to\ other\ by\ calling\ the\ pre-existing\ method\ \n\ "setRoom(Room\ r)";\ Frees\ this\ room\ up\ before\ the\ change.\n\ \n\ @param\ other\ (Room)\ the\ room\ to\ be\ placed\ on\ the\ Reservation.\n\ @throw\ IllegalArgumentException\ if\ the\ room\ is\ not\ available.\n
comment14.params=
comment14.target=java.lang.String\ payBill()
comment14.text=\n\ Sets\ the\ Reservation's\ amountPaid\ field\ to\ amountDue\ and\ paymentDue\ field\ to\ 0.0;\ returns\ a\ string\ confirming\ payment.\n\ Assume\ that\ payment\ is\ made\ in\ 1\ lump\ sum.\n\ Assume\ that\ payment\ can\ be\ made\ at\ any\ time\ of\ the\ reservation\ process.\n
comment15.params=
comment15.target=java.lang.String\ getInvoice()
comment15.text=\n\ Method\ to\ get\ invoice-like\ info\ on\ this\ reservation\n\ \n\ @return\ (String)\ representing\ invoice\ information\ from\ the\ reservation.\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\n\ Returns\ a\ String\ with\ information\ about\ this\ Reservation\ instance.\n\ Shows\ all\ aspects\ about\ the\ reservation\:\ \n\ Guest\ info,\ room\ info,\ reservation\ status,\ paymentDue\ info.\n\n\ @return\ (String)\ representing\ information\ about\ the\ Reservation.\n
comment2.params=
comment2.target=int\ getReservationID()
comment2.text=\n\ Returns\ an\ int\ representing\ the\ Reservation\ object's\ id\ number.\n\ \n\ @return\ (int)\ the\ Reservation\ object's\ id\ number.\n
comment3.params=
comment3.target=double\ getPaymentDue()
comment3.text=\n\ Returns\ a\ double\ that\ represents\ the\ charges\ for\ the\ room\ based\ on\ the\n\ Room\ object\ on\ the\ reservation.\ Takes\ into\ account\ the\ guest's\ discounts\n\ \n\ @return\ (double)\ representing\ nightly\ price\ of\ Room\n
comment4.params=
comment4.target=double\ getAmountPaid()
comment4.text=\n\ Returns\ a\ double\ that\ represents\ the\ amount\ paid\ by\ the\ guest\n\ \n\ @return\ (double)\ representing\ amount\ paid\ from\ bill\n
comment5.params=
comment5.target=Status\ getStatus()
comment5.text=\n\ Returns\ the\ status\ of\ the\ Reservation\ in\ string\ format.\n\ \n\ @return\ (String)\ the\ reservation\ status.\n
comment6.params=g
comment6.target=void\ setGuest(Guest)
comment6.text=\n\ Sets\ the\ guest\ object.\ at\ the\ moment\ doesnt\ have\ any\ safety\ measures.\n\n\ @param\ g\ (Guest)\ the\ guest\ to\ assign\ to\ this\ Reservation\ object\n
comment7.params=
comment7.target=void\ setPaymentDue()
comment7.text=\n\ setPaymentDue\ 1/2\:\ overloaded\ method;\ Calculates\ and\ sets\ what\ payment\ is\ due\ based\ on\ \n\ this\ Reservation's\ Room\ type\ and\ Guest\ discounts.\ \n\ Assumptions\:\ govt\=9%,\ mil\=7%,\ member\=5%;\ only\ highest\ rate\ applied.\n
comment8.params=amount
comment8.target=void\ setPaymentDue(double)
comment8.text=\n\ setPaymentDue\ 2/2\:\ overloaded\ method\ that\ sets\ paymentDue\ to\ 0.0\ if\ the\ reservation\ \n\ gets\ cancelled.\n\ \n\ @param\ amount\ (double)\ the\ amount\ to\ set\ paymentDue\ to\n\ @throw\ IllegalArgumentException\ if\ the\ amount\ set\ is\ less\ than\ 0.0.\n
comment9.params=s
comment9.target=void\ setStatus(Status)
comment9.text=\n\ Sets\ the\ status\ of\ the\ Reservation.\ \n\ As\ a\ reminder,\ a\ status\ can\ be\:\ (IN,\ OUT,\ CANCELED,\ WAITING)\n\ An\ illegal\ status\ change\ is\ if\ trying\ to\ set\ the\ status\ to\ what\ it\ is\ already.\n\n\ @param\ status\ (Status)\ the\ reservation\ status,\ if\ valid.\n\ @throw\ IllegalArgumentException\ if\ status\ change\ is\ illegal.\n
numComments=17
